from datetime import datetime, timedelta

from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message

from keyboards.inline.general_menu import back_to_main_menu
from keyboards.inline.deposit_menu import check_menu, payment_methods_menu
from loader import dp, bot
from states.states import BalanceState
from utils.db_api.db_commands import update_bal, select_user, \
    update_full_added_bal, update_ref_bal, select_settings
from utils.qiwi import balance, check_payment, check_payment_p2p


@dp.callback_query_handler(text_startswith="deposit")
async def add_balance_main(call: CallbackQuery, state: FSMContext):
    msg_to_edt = await call.message.edit_caption("<b>üëâüèª–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b>",
                                                 reply_markup=back_to_main_menu)
    await BalanceState.BS1.set()
    await state.update_data(msg_to_edt=msg_to_edt)


@dp.message_handler(state=BalanceState.BS1)
async def add_balance_2(message: Message, state: FSMContext):
    data = await state.get_data()
    msg_to_edt = data.get("msg_to_edt")
    balance_to_add = message.text
    await message.delete()
    try:
        if int(balance_to_add) >= 1:
            await msg_to_edt.edit_caption("üí≥ <b>–í—ã–±–µ—Ä–µ—Ç–µ –ø–ª–∞—Ç—ë–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞:</b>",
                                          reply_markup=payment_methods_menu)
            await state.update_data(balance_to_add=balance_to_add)
            await BalanceState.next()
        else:
            await message.answer("–ù–µ –≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
    except ValueError:
        await message.answer("–ù–µ –≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@dp.callback_query_handler(state=BalanceState.BS2, text_startswith="payment_method:")
async def add_balance_2(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    msg_to_edt, balance_to_add = data.get("msg_to_edt"), data.get("balance_to_add")
    method = call.data.split(":")[1]
    settings = await select_settings()
    keyboard, bill_id, url = await check_menu(balance_to_add, call.from_user.id, method,
                                              datetime.now() + timedelta(minutes=10))
    text = f"<b>üî• –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n\n" \
           f"üì±–ù–æ–º–µ—Ä: <code>+{settings[0]}</code>\n" \
           f"üóØ–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{call.from_user.id}</code>\n" \
           f"üí∞–°—É–º–º–∞: <code>{balance_to_add}</code>\n\n" \
           f"‚õîÔ∏è–ü–µ—Ä–µ–≤–æ–¥ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–µ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞!</b>"
    if method != "num":
        text = "üî•<b>–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã (P2P Qiwi bank)</b>\n\n" \
               "‚ùï<i>–ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ.\n" \
               "‚ùï–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç—ã –Ω–∞–∂–º–∏—Ç–µ ¬´–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π¬ª\n" \
               "‚ùï–ù–µ –±–æ–ª—å—à–µ 5000‚ÇΩ (–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É –ø—Ä–∏ –±–æ–ª—å—à—ã—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π)</i>\n\n" \
               "<b>‚≠êÔ∏è–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ‚≠êÔ∏è</b>"
    post_text = f"üîó–°—Å—ã–ª–∫–∞: <a href='{url}'>(–ö–ª–∏–∫–∞–±–µ–ª—å–Ω–æ)</a>" if method != "num" else \
        f"‚óæÔ∏è–ù–æ–º–µ—Ä: {settings[0]}\n" \
        f"‚óæÔ∏è–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {call.from_user.id}"
    await msg_to_edt.edit_caption(text,
                                  reply_markup=keyboard)
    past_bal = await balance()
    await state.update_data(method=method, balance_to_add=balance_to_add, bill_id=bill_id, past_bal=past_bal)
    await BalanceState.next()


@dp.callback_query_handler(text="check", state=BalanceState.BS3)
async def add_balance_main(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    bill_id, method, balance_to_add = data.get("bill_id"), data.get("method"), data.get("balance_to_add")
    past_bal = data.get("past_bal")
    settings = await select_settings()
    with open("main_menu.jpg", "rb") as file:
        photo = file.read()
    if method == "num":
        if await check_payment(call.from_user.id, balance_to_add, past_bal):
            user = await select_user(call.from_user.id)
            bal_to_add = int(balance_to_add) + user[6]
            await update_bal(call.from_user.id, bal_to_add)
            await update_full_added_bal(call.from_user.id, bal_to_add)
            if user[6]:
                await update_bal(user[6], round(bal_to_add / 10))
                await update_ref_bal(user[6], round(bal_to_add / 10))
            await call.message.delete()
            await call.message.answer_photo(photo=photo, caption="<b>–ì–æ—Ç–æ–≤–æ, –ø–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω, –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω ‚úÖ</b>",
                                            reply_markup=back_to_main_menu)
            user = await select_user(call.from_user.id)
            await bot.send_message(settings[4], f"""<b>
ü§ë –°–¥–µ–ª–∞–Ω –Ω–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç

<i>‚óΩÔ∏è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{call.from_user.username}
‚óΩÔ∏è–ê–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞: {call.from_user.id}
‚óΩÔ∏è–°—É–º–º–∞: {bal_to_add}
‚óΩÔ∏è–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {user[3]}</i></b>""")
            await state.finish()
        else:
            await call.message.answer("–Ø –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª –æ–ø–ª–∞—Ç—ã")
    else:
        if await check_payment_p2p(bill_id):
            user = await select_user(call.from_user.id)
            bal_to_add = int(balance_to_add) + user[6]
            await update_bal(call.from_user.id, bal_to_add)
            await update_full_added_bal(call.from_user.id, bal_to_add)
            if user[6]:
                await update_bal(user[6], round(bal_to_add / 10))
                await update_ref_bal(user[6], round(bal_to_add / 10))
            await call.message.delete()
            await call.message.answer_photo(photo=photo, caption="<b>–ì–æ—Ç–æ–≤–æ, –ø–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω, –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω ‚úÖ</b>",
                                            reply_markup=back_to_main_menu)
            user = await select_user(call.from_user.id)
            await bot.send_message(settings[4], f"""<b>
ü§ë –°–¥–µ–ª–∞–Ω –Ω–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç </b>

<i>‚óΩÔ∏è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{call.from_user.username}
‚óΩÔ∏è–ê–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞: {call.from_user.id}
‚óΩÔ∏è–°—É–º–º–∞: {bal_to_add}
‚óΩÔ∏è–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {user[3]}</i>""")
            await state.finish()
        else:
            await call.message.answer("–Ø –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª –æ–ø–ª–∞—Ç—ã")
